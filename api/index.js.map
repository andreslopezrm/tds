{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/dashboard.tsx", "../app/components/dash-navbar.tsx", "../app/utils/menu.ts", "../app/db/user.server.ts", "../app/db/apikey.server.ts", "../app/db/redis.server.ts", "../app/db/category.server.ts", "../app/routes/dashboard/categories.tsx", "../app/components/category-item.tsx", "../app/components/category-list.tsx", "../app/components/category-modal-create.tsx", "../app/components/modal.tsx", "../app/components/category-modal-edit.tsx", "../app/components/confirm-modal-delete.tsx", "../app/components/dash-header.tsx", "../app/components/load-more.tsx", "../app/components/toast.tsx", "../app/utils/params.server.ts", "../app/routes/dashboard/developer.tsx", "../app/components/developer-docs.tsx", "../app/components/developer-list.tsx", "../app/routes/dashboard/perfil.tsx", "../app/routes/dashboard/index.tsx", "../app/routes/dashboard/stats.tsx", "../app/db/stats.server.ts", "../app/routes/dashboard/tips.tsx", "../app/components/tip-item.tsx", "../app/components/tip-list.tsx", "../app/components/tip-modal-create.tsx", "../app/components/tip-modal-edit.tsx", "../app/db/tip.server.ts", "../app/utils/ramdom.ts", "../app/routes/sign-in/$.tsx", "../app/routes/sign-up/$.tsx", "../app/routes/api/tips.ts", "../app/routes/about.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    let { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady: () => {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err) => {\n          reject(err);\n        },\n        onError: (error) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp } from \"@clerk/remix\";\nimport { ClerkCatchBoundary } from \"@clerk/remix\";\n\n\nimport styles from \"./styles/app.css\"\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }]\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Tip Land\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const CatchBoundary = ClerkCatchBoundary();\n\nexport const loader: LoaderFunction = (args) => rootAuthLoader(args);\n\nfunction App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default ClerkApp(App);\n", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport DashNavbar from \"~/components/dash-navbar\";\nimport { checkUser } from \"~/db/user.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    await checkUser(userId);\n    return json({ userId });\n}\n\nexport default function DashboardRoute() {\n    return (\n        <main>\n            <div className=\"flex min-h-screen\">\n                <DashNavbar />\n                <section className=\"flex-1 px-4 py-4 md:px-6\">\n                    <Outlet />\n                </section>\n            </div>\n        </main>\n    );\n}", "import { Link, useLocation } from \"@remix-run/react\";\nimport { menuItems } from \"~/utils/menu\";\n\nexport default function DashNavbar() {\n    const { pathname } = useLocation();\n\n    return (\n        <nav className=\"bg-gray-100 p-3 shadow md:w-56 md:px-6 md:py-3\">\n            <div className=\"flex items-center md:gap-2\">\n                <img src=\"/images/forest.png\" alt=\"logo\" width=\"30\" />\n                <h1 className=\"hidden uppercase font-extrabold md:block\">Tip Land</h1>\n            </div>\n            <hr className=\"mt-3\" />\n            <div className=\"hidden mt-3 font-bold px-2 md:block\">Menu</div>\n            <ul className=\"mt-3 w-full\">\n                {menuItems.map(({ id, title, path, completePath }) => {\n                    const isSelected = pathname == completePath;\n                    const imageType = isSelected ? \"fill\" : \"out\";\n                    return (\n                        <li key={id} className=\"mt-2 px-2 py-1 rounded hover:bg-gray-200\">\n                            <Link to={path} className=\"flex items-center w-6 md:w-auto md:gap-2\">\n                                <img src={`/images/${id}-${imageType}.png`} alt={title} className=\"w-6 h-6 md:w-4 md:h-4\" />\n                                <span className={`hidden text-sm ${ isSelected ? \"font-semibold\" : \"font-light\" } md:block`}>{title}</span>\n                            </Link>\n                        </li>\n                    );\n                })}\n                <li>\n                   <button type=\"button\" className=\"mt-6 px-2 py-1\">\n                        <img src=\"/images/logout.png\" alt=\"Logout\" className=\"w-6 h-6 md:hidden md:w-4 md:h-4\" />\n                   </button>\n                </li>\n            </ul>\n        </nav>\n    );\n}", "export const menuItems = [\n    {\n        id: \"home\",\n        title: \"Home\",\n        path: \"\",\n        completePath: \"/dashboard\"\n    },\n    {\n        id: \"tip\",\n        title: \"Tips\",\n        path: \"tips\",\n        completePath: \"/dashboard/tips\"\n    },\n    {\n        id: \"cat\",\n        title: \"Categories\",\n        path: \"categories\",\n        completePath: \"/dashboard/categories\"\n    },\n    {\n        id: \"stats\",\n        title: \"Stats\",\n        path: \"stats\",\n        completePath: \"/dashboard/stats\"\n    },\n    {\n        id: \"dev\",\n        title: \"Developer\",\n        path: \"developer\",\n        completePath: \"/dashboard/developer\",\n    },\n    {\n        id: \"perfil\",\n        title: \"Perfil\",\n        path: \"perfil\",\n        completePath: \"/dashboard/perfil\"\n    }\n];\n", "import { Entity, Schema } from \"redis-om\";\nimport { createApiKey } from \"./apikey.server\";\nimport { createCategory } from \"./category.server\";\nimport { redisClient, redisConnect } from \"./redis.server\";\n\nclass User extends Entity {}\n\nconst userSchema = new Schema(User, {\n    clerkId: { type: \"string\" },\n    provider: { type: \"string\" },\n    active: { type: \"boolean\"},\n    createAt: { type: \"date\"}\n});\n\n\nasync function getUserRepository() {\n    await redisConnect();\n    const repository = redisClient.fetchRepository(userSchema);\n  \n    await repository.createIndex();\n    return repository;\n}\n\nexport async function checkUser(userId: string) {\n    const repository = await getUserRepository();\n    const user = await repository.search()\n                        .where(\"clerkId\")\n                        .equals(userId)\n                        .first();\n\n    if(!user) {\n        await repository.createAndSave({\n            clerkId: userId,\n            active: true,\n            createAt: new Date()\n        });\n\n        await createCategory({ userId, name: \"Default\" });\n        await createApiKey(userId);\n    }\n}", "import { Entity, Repository, Schema } from \"redis-om\";\nimport { uuid } from 'uuidv4';\nimport { redisClient, redisConnect } from \"./redis.server\";\n\nexport interface ApiKey {\n    userId: string;\n    value: string;\n    updateAt: Date;\n}\n\nexport class ApiKey extends Entity {}\n\nconst apiKeySchema = new Schema(ApiKey, {\n    userId: { type: \"string\", indexed: true },\n    value: { type: \"string\", indexed: true },\n    updateAt: { type: \"date\" }\n});\n\n\nasync function getApiKeyRepository(): Promise<Repository<ApiKey>> {\n    await redisConnect();\n    const repository = redisClient.fetchRepository(apiKeySchema);\n  \n    await repository.createIndex();\n    return repository;\n}\n\nexport function generateApiKeyValue(): string {\n    return `${uuid()}-api-key`;\n}\n\nexport async function getApiKeyByUser(userId: string): Promise<ApiKey | null> {\n    const repository = await getApiKeyRepository();\n\n    return repository.search()\n            .where(\"userId\")\n            .equals(userId)\n            .first();\n}\n\nexport async function createApiKey(userId: string) : Promise<ApiKey> {\n    const repository = await getApiKeyRepository();                   \n    const value = generateApiKeyValue();\n    return repository.createAndSave({ userId, value, updateAt: new Date() });\n}\n\n\nexport async function updateApiKey(userId: string) : Promise<ApiKey> {\n    const repository = await getApiKeyRepository();\n    const apiKey = await getApiKeyByUser(userId);\n    \n    if(apiKey) {\n        apiKey.value = generateApiKeyValue();\n        await repository.save(apiKey);\n        return apiKey;\n    }                       \n    const value = generateApiKeyValue();\n    return repository.createAndSave({ userId, value, updateAt: new Date() });\n}\n\nexport async function getUserIdByApiKey(apiKey: string): Promise<string | undefined> {\n    const repository = await getApiKeyRepository();\n    const entity = await repository.search()\n                            .where(\"value\")\n                            .equals(apiKey)\n                            .first();\n    return entity?.userId;\n}", "import { Client } from \"redis-om\";\n\nconst redisClient = new Client();\n\nconst redisConnect = async () => {\n    if (!redisClient.isOpen()) {\n      await redisClient.open(process.env.REDIS_URL);\n    }\n};\n\nexport { redisClient, redisConnect };\n\n", "import slugify from \"slugify\";\nimport { Entity, Repository, Schema } from \"redis-om\";\nimport { redisClient, redisConnect } from \"./redis.server\";\n\nexport interface Category {\n    name: string;\n    slug: string;\n    userId: string;\n    createAt: Date;\n}\n\nexport class Category extends Entity {}\n\nexport type CategoryCreate = Pick<Category, \"userId\" | \"name\">\n\nexport type CategoryUpdate = Pick<Category, \"entityId\" | \"userId\" | \"name\">\n\nexport type CategorySearchSlug = Pick<Category, \"userId\" | \"slug\">\n\nexport type CategorySearch = {\n    userId: string;\n    offset?: number;\n    perPage?: number;\n}\n\nconst categorySchema = new Schema(Category, {\n    name: { type: \"string\" },\n    slug: { type: \"string\", indexed: true },\n    userId: { type: \"string\", indexed: true },\n    createAt: { type: \"date\", sortable: true }\n});\n\nasync function getCategoryRepository(): Promise<Repository<Category>> {\n    await redisConnect();\n    const repository = redisClient.fetchRepository(categorySchema);\n  \n    await repository.createIndex();\n    return repository;\n}\n\nasync function getCategorySlug({ userId, name } : CategoryCreate): Promise<string> {\n    const slug = slugify(name);\n    \n   const category = await getCategoryByUserAndSlug({ userId, slug });\n   if(category) {\n    return `${slug}-${+new Date()}`;\n   }\n\n   return slug;\n}\n\nexport async function createCategory({ userId, name } : CategoryCreate) : Promise<Category> {\n    const repository = await getCategoryRepository();\n    const slug = await getCategorySlug({ userId, name });\n    return repository.createAndSave({ userId, name, slug, createAt: new Date() });\n}\n\nexport async function getAllCategoriesByUserPaging({ userId, offset = 0, perPage = 1}: CategorySearch): Promise<Category[]> {\n    const repository = await getCategoryRepository();\n\n    return repository.search()\n            .where(\"userId\")\n            .equals(userId)\n            .sortDescending(\"createAt\")\n            .return\n            .page(offset, perPage);\n}\n\nexport async function getAllCategoriesByUser(userId: string) {\n    const repository = await getCategoryRepository();\n    \n    return repository.search()\n            .where(\"userId\")\n            .equals(userId)\n            .sortDescending(\"createAt\")\n            .all();\n}\n\nexport async function countAllCategoriesByUser(userId: string): Promise<number> {\n    const repository = await getCategoryRepository();\n\n    return repository.search()\n        .where(\"userId\")\n        .equals(userId)\n        .return\n        .count();\n} \n\nexport async function getCategoryById(entityId: string): Promise<Category> {\n    const repository = await getCategoryRepository();\n    return repository.fetch(entityId);\n}\n\nexport async function getCategoryBySlug(slug: string): Promise<Category | null> {\n    const repository = await getCategoryRepository();\n    return repository.search()\n                .where(\"slug\")\n                .equals(slug)\n                .first();\n}\n\nexport async function getCategoryByUserAndSlug({ userId, slug }: CategorySearchSlug): Promise<Category | null> {\n    const repository = await getCategoryRepository();\n    return repository.search()\n                .where(\"slug\")\n                .equals(slug)\n                .where(\"userId\")\n                .equals(userId)\n                .first();\n}\n\nexport async function updateCategory({ entityId, userId, name }: CategoryUpdate): Promise<Category> {\n    const repository = await getCategoryRepository();\n    const category = await getCategoryById(entityId);\n    \n    if(!category) {\n        throw new Error(\"Category not found\");\n    }\n    const slug = await getCategorySlug({ userId, name });\n    category.name = name;\n    category.slug = slug;\n    \n    await repository.save(category);\n    return category;\n}\n\nexport async function deleteCategory(entityId: string): Promise<void> {\n    const repository = await getCategoryRepository();\n    await repository.remove(entityId);\n}\n", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Link, useActionData, useLoaderData, useTransition } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport CategoryList from \"~/components/category-list\";\nimport CategoryModalCreate from \"~/components/category-modal-create\";\nimport CategoryModalEdit from \"~/components/category-modal-edit\";\nimport ConfirmModalDelete from \"~/components/confirm-modal-delete\";\nimport DashHeader from \"~/components/dash-header\";\nimport LoadMore from \"~/components/load-more\";\nimport Toast from \"~/components/toast\";\nimport { Category, countAllCategoriesByUser, createCategory, deleteCategory, getAllCategoriesByUserPaging, updateCategory } from \"~/db/category.server\";\nimport { getQueryIntParameter } from \"~/utils/params.server\";\n\ntype IntentType = \"create\" | \"edit\" | \"delete\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n    const offset = getQueryIntParameter(request, \"offset\", 0);\n    const perPage = getQueryIntParameter(request, \"per_page\", 200); \n\n    const [total, categories] = await Promise.all([ countAllCategoriesByUser(userId), getAllCategoriesByUserPaging({ userId, offset, perPage }) ]);\n    return json({ total, categories, offset, perPage });\n}\n\nexport async function action({ request }: ActionArgs) {\n    const { userId } = await getAuth(request);\n\n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    const formData = await request.formData();\n    const intent = formData.get(\"intent\") as IntentType; \n    \n    if(intent === \"create\") {\n        const name = formData.get(\"name\") as string;\n        const category = await createCategory({ userId, name });\n        return json({ intent, category });\n    } else if(intent === \"edit\") {\n        const name = formData.get(\"name\") as string;\n        const entityId = formData.get(\"entityId\") as string;\n        const category = await updateCategory({ entityId, userId, name });\n        return json({ intent, category });\n    } else if(intent === \"delete\") {\n        const entityId = formData.get(\"entityId\") as string;\n        await deleteCategory(entityId);\n    }\n    \n    return json({ intent });\n}\n\nexport default function DashboardCategoryRoute() {\n\n    const { total, categories, offset, perPage } = useLoaderData();\n    const data = useActionData();\n    const { state } = useTransition();\n    const isSubmiting = state === \"submitting\";\n    \n    const [showCreateModal, setShowCreateModal] = useState<boolean>(false);\n    const [message, setMessage] = useState<string | null>();\n    const [categoryEdit, setCategoryEdit] = useState<Category | null>(null);\n    const [categoryDeleteId, setCategoryDeleteId] = useState<string | null>(null);\n\n    useEffect(() => {\n        if(data?.intent === \"create\" && data?.category) {\n            setShowCreateModal(false);\n            setMessage(\"Create success\");\n        } else if(data?.intent === \"edit\" && data?.category) {\n            setCategoryEdit(null);\n            setMessage(\"Update success\");\n        } else if(data?.intent === \"delete\") {\n            setCategoryDeleteId(null);\n            setMessage(\"Delete success\");\n        }\n    }, [data]);\n\n    return (\n        <div>\n            <DashHeader title=\"Categories\" />\n            <div className=\"mt-4\">\n                <button type=\"button\" onClick={() => setShowCreateModal(true)} className=\"text-sm font-bold underline\"> + New category </button>\n            </div>\n            <CategoryList categories={categories} onSelect={setCategoryEdit} onDelete={setCategoryDeleteId} />\n            <LoadMore total={total} current={categories.length} path=\"/dashboard/categories\" offset={offset} perPage={perPage} />\n            {\n                showCreateModal ? (<CategoryModalCreate isSubmiting={isSubmiting} onClose={() => setShowCreateModal(false)} />) : null\n            }\n            {\n                categoryEdit ? (<CategoryModalEdit isSubmiting={isSubmiting} onClose={() => setCategoryEdit(null)} category={categoryEdit} />) : null\n            }\n            {\n                categoryDeleteId ? (<ConfirmModalDelete entityId={categoryDeleteId} isSubmiting={isSubmiting} onClose={() => setCategoryDeleteId(null)} message=\"Are your sure delete this category?\" />) : null\n            }\n            {\n                message ? <Toast message={message} onClose={() => setMessage(null)} /> : null\n            }\n        </div>\n    );\n}", "import { Category } from \"~/db/category.server\"\n\ntype Props = {\n    category: Category;\n    onSelect: (category: Category) => void;\n    onDelete: (entityId: string) => void;\n}\n\nexport default function CategoryItem({ category, onSelect, onDelete }: Props) {\n    const { entityId, name, slug } = category;\n    return (\n        <tr className=\"bg-white border-b\">\n            <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                <p>{ name }</p>\n            </th>\n            <td className=\"py-4 px-6\">\n                <p>{ slug }</p>\n            </td>\n            <td className=\"py-4 px-6\">\n                <div className=\"inline-flex gap-2 text-black\">\n                    <button onClick={() => onSelect(category)} className=\"underline hover:opacity-80\">Edit</button>\n                    <button onClick={() => onDelete(entityId)} className=\"hover:opacity-80\">Delete</button>\n                </div>\n            </td>\n        </tr>\n    );\n}", "import { Category } from \"~/db/category.server\"\nimport CategoryItem from \"./category-item\";\n\ntype Props = {\n    categories: Category[];\n    onSelect: (category: Category) => void;\n    onDelete: (entityId: string) => void;\n}\n\nexport default function CategoryList({ categories, onSelect, onDelete }: Props) {\n   return (\n        <div className=\"overflow-x-auto relative mt-6\">\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                    <tr>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Name\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Slug\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Actions\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {categories.map(category => <CategoryItem category={category} key={category.entityId} onSelect={onSelect} onDelete={onDelete} />)}\n                </tbody>\n            </table>\n        </div>\n   );\n}", "import { Form } from \"@remix-run/react\";\nimport { Modal } from \"./modal\";\n\ntype Props = {\n    isSubmiting: boolean;\n    onClose: Function;\n}\n\nexport default function CategoryModalCreate({ isSubmiting, onClose }: Props) {\n    return (\n        <Modal onClose={onClose}>\n            <Form method=\"post\" className=\"md:w-96\">\n                <div>\n                    <label htmlFor=\"name\" className=\"block mb-2 text-sm font-medium text-gray-900\">Name</label>\n                    <input type=\"text\" id=\"name\" name=\"name\" className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-full p-2.5\" required />\n                </div>\n                <div className=\"flex justify-end gap-2 mt-5\">\n                    <button type=\"button\" disabled={isSubmiting} onClick={() => onClose()} className=\"text-gray-900 border-2 border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center mr-2 mb-2 hover:opacity-80 disabled:opacity-50\">Cancel</button>\n                    <button type=\"submit\" disabled={isSubmiting} name=\"intent\" value=\"create\" className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">\n                        Save {isSubmiting ? \"...\" : \"\"}\n                    </button>\n                </div>\n            </Form>\n        </Modal>\n    );\n}", "type Props = {\n    children?: JSX.Element;\n    onClose: Function;\n}\n\nexport function Modal({ children, onClose }: Props) {\n    return (\n        <div id=\"modal\" aria-hidden=\"true\" className=\" bg-white bg-opacity-80 flex justify-center items-center overflow-y-auto overflow-x-hidden fixed top-0 right-0 bottom-0 left-0 z-10 w-full md:inset-0 h-modal md:h-full\">\n            <div className=\"max-w-2xl m-8 relative inline-flex items-center justify-center p-1 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-black\">\n                <div className=\"relative p-8 transition-all ease-in duration-75 bg-white rounded-md\">\n                    <div className=\"mb-4 flex justify-between\">\n                        <h3 className=\"font-bold text-xl\">Tip Land</h3>\n                        <button type=\"button\" onClick={() => onClose()}>\n                            <img src=\"/images/close.png\" width=\"20\" />\n                        </button>\n                    </div>\n                    <div>\n                        { children }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}", "import { Form } from \"@remix-run/react\";\nimport { Category } from \"~/db/category.server\";\nimport { Modal } from \"./modal\";\n\ntype Props = {\n    category: Category;\n    isSubmiting: boolean;\n    onClose: Function;\n}\n\nexport default function CategoryModalEdit({ category, isSubmiting, onClose }: Props) {\n    const { entityId, name } = category;\n    return (\n        <Modal onClose={onClose}>\n            <Form method=\"post\" className=\"md:w-96\">\n                <input type=\"hidden\" name=\"entityId\" value={entityId} />\n                <div>\n                    <label htmlFor=\"name\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Name</label>\n                    <input type=\"text\" id=\"name\" defaultValue={name} name=\"name\" className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-full p-2.5\" required />\n                </div>\n                <div className=\"flex justify-end gap-2 mt-5\">\n                    <button type=\"button\" disabled={isSubmiting} onClick={() => onClose()} className=\"text-gray-900 border-2 border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center mr-2 mb-2 hover:opacity-80 disabled:opacity-50\">Cancel</button>\n                    <button type=\"submit\" disabled={isSubmiting} name=\"intent\" value=\"edit\" className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">\n                        Save {isSubmiting ? \"...\" : \"\"}\n                    </button>\n                </div>\n            </Form>\n        </Modal>\n    );\n}", "import { Form } from \"@remix-run/react\";\nimport { Modal } from \"./modal\";\n\ntype Props = {\n    entityId: string;\n    isSubmiting: boolean;\n    message: string;\n    onClose: Function;\n}\n\n\nexport default function ConfirmModalDelete({ entityId, isSubmiting, message, onClose}: Props) {\n    return (\n        <Modal onClose={onClose}>\n            <Form method=\"post\" className=\"md:w-96\">\n                <input type=\"hidden\" name=\"entityId\" value={entityId} />\n                <p>{message}</p>\n                <div className=\"flex justify-end gap-2 mt-5\">\n                    <button type=\"button\" disabled={isSubmiting} onClick={() => onClose()} className=\"text-gray-900 border-2 border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center mr-2 mb-2 hover:opacity-80 disabled:opacity-50\">Cancel</button>\n                    <button type=\"submit\" disabled={isSubmiting} name=\"intent\" value=\"delete\" className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">\n                        Delete {isSubmiting ? \"...\" : \"\"}\n                    </button>\n                </div>\n            </Form>\n        </Modal>\n    );\n}", "import { useState } from \"react\";\nimport { useClerk, } from \"@clerk/remix\";\n\ntype Props = {\n    title: string\n}\n\nexport default function DashHeader({ title } : Props) {\n    const { signOut } = useClerk();\n    const [isDisabled, setIsDisabled] = useState(false);\n\n    const handleOnExitSession = async () => {\n        setIsDisabled(true);\n        await signOut();\n        setIsDisabled(false);\n        window.location.href = '/';\n    }\n\n    return (\n        <section className=\"flex justify-between\">\n            <h1 className=\"text-2xl font-extrabold md:text-3xl\">{title}</h1>\n            <button disabled={isDisabled} type=\"button\" onClick={handleOnExitSession} className=\"text-gray-900 hover:text-white border-2 border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 hidden md:block disabled:opacity-50\">Logout</button>\n        </section>\n    );\n}", "import { Link } from \"@remix-run/react\";\n\ntype Props = {\n    total: number;\n    current: number;\n    path: string;\n    offset: number;\n    perPage: number;\n}\n\nexport default function LoadMore({ total, current, path, offset, perPage }: Props) {\n\n    if(current >= total) {\n        return null;\n    }\n\n    const nextPath = `${path}?offset=${offset}&per_page=${perPage += perPage}`;\n    return (\n        <div className=\"mt-8\">\n            <Link to={nextPath} className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">Load more</Link>\n        </div>\n    );\n}", "import { useEffect } from \"react\";\n\ntype Props = {\n    message: string;\n    onClose: Function;\n    delay?: boolean;\n}\n\nexport default function Toast({ message, onClose, delay = true } : Props) {\n\n    useEffect(() => {\n        if(delay) {\n            setTimeout(onClose, 2500);\n        }\n    }, []);\n\n    return (\n        <div id=\"toast\" className=\"fixed right-4 bottom-5\">\n            <div className=\"flex items-center p-4 mb-4 w-full max-w-xs rounded-lg shadow text-white bg-black gap-3\" role=\"alert\">\n                <div className=\"ml-3 text-sm font-normal\">{message}</div>\n                <button type=\"button\" onClick={() => onClose()} className=\"ml-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 inline-flex h-8 w-8 text-gray-500 hover:text-white bg-gray-100 hover:bg-gray-200\" data-dismiss-target=\"#toast\" aria-label=\"Close\">\n                    <span className=\"sr-only\">Close</span>\n                    <svg aria-hidden=\"true\" className=\"w-5 h-5\" fill=\"#000\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path></svg>\n                </button>\n            </div>\n        </div>\n    );\n}", "export function getQueryIntParameter(request: Request, name: string, defaultValue: number): number {\n    const url = new URL(request.url);\n    const param  = parseInt(url.searchParams.get(name) ?? \"\", 10);\n    if(!isNaN(param)){\n        return param;\n    }\n    return defaultValue;\n}\n\nexport function getQueryStringParameter(request: Request, name: string): string | null {\n    const url = new URL(request.url);\n    return url.searchParams.get(name);\n}", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport DashHeader from \"~/components/dash-header\";\nimport DeveloperDocs from \"~/components/developer-docs\";\nimport DeveloperList from \"~/components/developer-list\";\nimport Toast from \"~/components/toast\";\nimport { ApiKey, getApiKeyByUser, updateApiKey } from \"~/db/apikey.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n    const apiKey = await getApiKeyByUser(userId) as ApiKey;\n    return json({ apiKey });\n}\n\nexport async function action({ request }: ActionArgs) {\n    const { userId } = await getAuth(request);\n\n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    await updateApiKey(userId);\n    return json({ updated: true });\n}\n\nexport default function DashboardDeveloperRoute() {\n    \n    const { apiKey } = useLoaderData();\n    const data = useActionData<typeof action>();\n    const [showApiKey, setShowApiKey] = useState(false);\n    const [message, setMessage] = useState<string | null>();\n\n\n    useEffect(() => {\n        if(data?.updated) {\n            setMessage(\"Update success\");\n        }\n    }, [data]);\n   \n    const apiKeyValue = showApiKey ? apiKey?.value : \"******************\";\n    const handleToogleVisible = () => setShowApiKey(!showApiKey);\n\n    return (\n        <div>\n            <DashHeader title=\"Developer\" />\n            <p className=\"mt-4 font-light\">To use the api rest of the tip of the day, send the value of your Api Key as a query parameter in the request</p>\n            <DeveloperList apiKey={apiKeyValue} visible={showApiKey} onToogleVisible={handleToogleVisible} />\n            <DeveloperDocs apiKeyShow={apiKey?.value} apiKeyHidden={apiKeyValue} />\n            {\n                message ? <Toast message={message} onClose={() => setMessage(null)} /> : null\n            }\n        </div>\n    );\n}", "import { useEffect, useState } from \"react\";\n\ntype Props = {\n    apiKeyShow: string | null;\n    apiKeyHidden: string | null;\n}\n\nexport default function DeveloperDocs({ apiKeyShow, apiKeyHidden }: Props) {\n\n    const [baseUrl, setBaseUrl] = useState(\"\");\n\n    const endpointUrlShow = `${baseUrl}/api/tips?api_key=${apiKeyShow}`;\n    const endpointUrlHidden = `${baseUrl}/api/tips?api_key=${apiKeyHidden}`;\n\n    useEffect(() => {\n        setBaseUrl(window.location.origin);\n    }, []);\n\n    return (\n        <>\n            <h2 className=\"font-bold mt-6 text-xl\">Endpoint</h2>\n            <div className=\"overflow-x-auto relative mt-6\">\n                <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                    <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                        <tr>\n                            <th scope=\"col\" className=\"py-3 px-6\">\n                                Parameter\n                            </th>\n                            <th scope=\"col\" className=\"py-3 px-6\">\n                                Type\n                            </th>\n                            <th scope=\"col\" className=\"py-3 px-6\">\n                                Required\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className=\"bg-white border-b\">\n                            <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                                <p>api_key</p>\n                            </th>\n                            <td className=\"py-4 px-6\">\n                                <p>string</p>\n                            </td>\n                            <td className=\"py-4 px-6\">\n                                <p>Yes</p>\n                            </td>\n                        </tr>\n                        <tr className=\"bg-white border-b\">\n                            <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                                <p>category_slug</p>\n                            </th>\n                            <td className=\"py-4 px-6\">\n                                <p>string</p>\n                            </td>\n                            <td className=\"py-4 px-6\">\n                                <p>No</p>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <p className=\"font-semibold mt-8\">Usage example</p>\n            <div className=\"bg-gray-100 p-2 mt-2 rounded\">\n                <a className=\"font-mono text-sm underline\" href={endpointUrlShow} target=\"_blank\">{endpointUrlHidden}</a>\n            </div>\n        </>\n    );\n}", "import { Form } from \"@remix-run/react\";\n\ntype Props = {\n    apiKey: string | null;\n    visible: boolean;\n    onToogleVisible: () => void;\n}\n\nexport default function DeveloperList({ apiKey, visible, onToogleVisible }: Props) {\n    return (\n        <div className=\"overflow-x-auto relative mt-6\">\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                    <tr>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Api Key\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Actions\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr className=\"bg-white border-b\">\n                        <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                            <p>{ apiKey }</p>\n                        </th>\n                        <td className=\"py-4 px-6\">\n                            <div className=\"inline-flex gap-2 text-black\">\n                                <button onClick={onToogleVisible} className=\"underline hover:opacity-80\">\n                                    { visible ? \"Hidden\" : \"View\" }\n                                </button>\n                                <Form method=\"post\">\n                                    <button type=\"submit\" className=\"hover:opacity-80\">Refresh</button>\n                                </Form>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}", "import { UserProfile } from \"@clerk/remix\";\nimport DashHeader from \"~/components/dash-header\";\n\nexport default function DashboardPerfilRoute() {\n    return (\n        <div>\n            <DashHeader title=\"Perfil\" />\n            <div className=\"auth auth-perfil mt-8\">\n                <UserProfile />\n            </div>\n        </div>\n    );\n}", "import DashHeader from \"~/components/dash-header\";\n\nexport default function DashboardIndexRoute(){\n    return (\n        <div>\n            <DashHeader title=\"Home\" />\n        </div>\n    )\n}", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport DashHeader from \"~/components/dash-header\";\nimport { getStatsInWeek } from \"~/db/stats.server\";\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n  \nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n    const stats = await getStatsInWeek(userId);\n    return json({ stats });\n}\n\nexport default function DashboardStatsRoute() {\n    const { stats } = useLoaderData<{stats: {date: string, count: number }[]}>();\n\n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top' as const,\n          },\n          title: {\n            display: true,\n            text: 'Stats',\n          },\n        },\n    };\n\n    const labels = stats.map(({ date }) => date);\n    \n    const data = {\n        labels,\n        datasets: [\n          {\n            label: 'Day',\n            data: stats.map(({ count }) => count),\n            backgroundColor: '#000',\n          }\n        ],\n    };\n    \n    return (\n        <div>\n            <DashHeader title=\"Stats\" />\n            <p className=\"font-light\">Total request per day</p>\n            <div className=\"max-w-3xl m-auto mt-6\">\n                <Bar options={options} data={data} />\n            </div>\n        </div>\n    );\n}", "import { Entity, Repository, Schema } from \"redis-om\";\nimport { redisClient, redisConnect } from \"./redis.server\";\nimport dayjs from \"dayjs\";\n\nconst FORMAT = \"DD-MM-YYYY\";\n\nexport interface Stat {\n    userId: string;\n    createAt: string;\n    count: number;\n}\n\nexport class Stat extends Entity {}\n\nconst statSchema = new Schema(Stat, {\n    userId: { type: \"string\", indexed: true },\n    createAt: { type: \"string\", indexed: true },\n    count: { type: \"number\" }\n});\n\nasync function getStatRepository(): Promise<Repository<Stat>> {\n    await redisConnect();\n    const repository = redisClient.fetchRepository(statSchema);\n  \n    await repository.createIndex();\n    return repository;\n}\n\nexport async function createStat(userId: string) {\n    const repository = await getStatRepository();\n    \n    const now = dayjs();\n    const createAt = now.format(FORMAT);\n\n    const existToday = await repository.search()\n                        .where(\"createAt\")\n                        .equals(createAt)\n                        .first();\n    \n\n    if(existToday) {\n        existToday.count = (existToday.count === undefined || existToday.count === null) ? 0 : existToday.count + 1;\n        repository.save(existToday);\n        return existToday;\n    }\n    \n    const stat = await repository.createAndSave({ userId, createAt, count: 1 });\n    return stat;\n}\n\nexport async function getStatsInWeek(userId: string) {\n    const repository = await getStatRepository();\n    \n    const now = dayjs();\n    const oneDaysAgo = now.subtract(1, \"day\");\n    const twoDaysAgo = now.subtract(2, \"day\");\n    const threeDaysAgo = now.subtract(3, \"day\");\n    const fourDaysAgo = now.subtract(4, \"day\");\n    const fiveDaysAgo = now.subtract(5, \"day\");\n\n    const nowFormat = now.format(FORMAT);\n    const oneDaysAgoFormat = oneDaysAgo.format(FORMAT);\n    const twoDaysAgoFormat = twoDaysAgo.format(FORMAT);\n    const threeDaysAgoFormat = threeDaysAgo.format(FORMAT);\n    const fourDaysAgoFormat = fourDaysAgo.format(FORMAT);\n    const fiveDaysAgoFormat = fiveDaysAgo.format(FORMAT);\n\n    const dates = [nowFormat, oneDaysAgoFormat, twoDaysAgoFormat, threeDaysAgoFormat, fourDaysAgoFormat, fiveDaysAgoFormat].reverse();\n    \n    const stats = await repository.search()\n                    .where(\"userId\")\n                    .equals(userId)\n                    .where(\"createAt\")\n                    .equal(nowFormat)\n                    .or(\"createAt\")\n                    .equals(oneDaysAgoFormat)\n                    .or(\"createAt\")\n                    .equals(twoDaysAgoFormat)\n                    .or(\"createAt\")\n                    .equals(threeDaysAgoFormat)\n                    .or(\"createAt\")\n                    .equals(fourDaysAgoFormat)\n                    .or(\"createAt\")\n                    .equals(fiveDaysAgoFormat)\n                    .all();\n\n    return dates.map(date => (\n        {\n            date,\n            count: stats.find(stat => stat.createAt == date)?.count ?? 0\n        }\n    ));\n}", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Link, useActionData, useLoaderData, useTransition } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport ConfirmModalDelete from \"~/components/confirm-modal-delete\";\nimport DashHeader from \"~/components/dash-header\";\nimport LoadMore from \"~/components/load-more\";\nimport TipList from \"~/components/tip-list\";\nimport TipModalCreate from \"~/components/tip-modal-create\";\nimport { TipModalEdit } from \"~/components/tip-modal-edit\";\nimport Toast from \"~/components/toast\";\nimport { getAllCategoriesByUser } from \"~/db/category.server\";\nimport { countAllTipsByUser, createTip, deleteTip, getAllTipsByUserPaging, getTipsWithCategory, Tip, updateTip } from \"~/db/tip.server\";\nimport { getQueryIntParameter } from \"~/utils/params.server\";\n\ntype IntentType = \"create\" | \"edit\" | \"delete\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n    const offset = getQueryIntParameter(request, \"offset\", 0);\n    const perPage = getQueryIntParameter(request, \"per_page\", 200); \n\n    const [total, plainTips, categories] = await Promise.all([ \n        countAllTipsByUser(userId), \n        getAllTipsByUserPaging({ userId, offset, perPage }), \n        getAllCategoriesByUser(userId) \n    ]);\n\n    const tips = getTipsWithCategory({ tips: plainTips, categories });\n    return json({ total, tips, categories, offset, perPage });\n}\n\nexport async function action({ request }: ActionArgs) {\n    const { userId } = await getAuth(request);\n\n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    const formData = await request.formData();\n    const intent = formData.get(\"intent\") as IntentType; \n    \n    if(intent === \"create\") {\n        const description = formData.get(\"description\") as string;\n        const categoryId = formData.get(\"categoryId\") as string;\n\n        const tip = await createTip({ userId, categoryId, description });\n        return json({ intent, tip });\n    } \n    else if(intent === \"edit\") {\n        const entityId = formData.get(\"entityId\") as string;\n        const description = formData.get(\"description\") as string;\n        const categoryId = formData.get(\"categoryId\") as string;\n        \n        const tip = await updateTip({ entityId, description, categoryId });\n        return json({ intent, tip });\n    } else if(intent === \"delete\") {\n        const entityId = formData.get(\"entityId\") as string;\n        await deleteTip(entityId);\n    }\n    \n    return json({ intent });\n}\n\nexport default function DashboardTipsRoute(){\n\n    const { total, tips, categories, offset, perPage } = useLoaderData();\n    const data = useActionData();\n    const { state } = useTransition();\n    const isSubmiting = state === \"submitting\";\n\n    const [showCreateModal, setShowCreateModal] = useState<boolean>(false);\n    const [message, setMessage] = useState<string | null>();\n    const [tipEdit, setTipEdit] = useState<Tip | null>(null);\n    const [tipDeleteId, setTipDeleteId] = useState<string | null>(null);\n\n    useEffect(() => {\n        if(data?.intent === \"create\" && data?.tip) {\n            setShowCreateModal(false);\n            setMessage(\"Create success\");\n        } \n        else if(data?.intent === \"edit\" && data?.tip) {\n            setTipEdit(null);\n            setMessage(\"Update success\");\n        } else if(data?.intent === \"delete\") {\n            setTipDeleteId(null);\n            setMessage(\"Delete success\");\n        }\n    }, [data]);\n    \n    return (\n        <div>\n            <DashHeader title=\"Tips\" />\n            <div className=\"mt-4\">\n                <button type=\"button\" onClick={() => setShowCreateModal(true)} className=\"text-sm font-bold underline\"> + New tip </button>\n            </div>\n            <TipList tips={tips} onSelect={setTipEdit} onDelete={setTipDeleteId} />\n            <LoadMore total={total} current={tips.length} path=\"/dashboard/tips\" offset={offset} perPage={perPage} />\n            {\n                showCreateModal ? (<TipModalCreate isSubmiting={isSubmiting} onClose={() => setShowCreateModal(false)} categories={categories} />) : null\n            }\n            {\n                tipEdit ? (<TipModalEdit isSubmiting={isSubmiting} onClose={() => setTipEdit(null)} tip={tipEdit} categories={categories} />) : null\n            }\n            {\n                tipDeleteId ? (<ConfirmModalDelete entityId={tipDeleteId} isSubmiting={isSubmiting} onClose={() => setTipDeleteId(null)} message=\"Are your sure delete this tip?\" />) : null\n            }\n            {\n                message ? <Toast message={message} onClose={() => setMessage(null)} /> : null\n            }\n        </div>\n    )\n}", "import { Tip } from \"~/db/tip.server\";\n\ntype Props = {\n    tip: Tip;\n    onSelect: (tip: Tip) => void;\n    onDelete: (entityId: string) => void;\n}\n\nexport default function TipItem({ tip, onSelect, onDelete }: Props) {\n    const { entityId, description, category } = tip;\n    return (\n        <tr className=\"bg-white border-b\">\n            <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900\">\n                <p>{ description }</p>\n            </th>\n            <td className=\"py-4 px-6\">\n                { category?.name }\n            </td>\n            <td className=\"py-4 px-6\">\n                <div className=\"inline-flex gap-2 text-black\">\n                    <button onClick={() => onSelect(tip)} className=\"underline hover:opacity-80\">Edit</button>\n                    <button onClick={() => onDelete(entityId)} className=\"hover:opacity-80\">Delete</button>\n                </div>\n            </td>\n        </tr>\n    );\n}", "import { Tip } from \"~/db/tip.server\";\nimport TipItem from \"./tip-item\";\n\ntype Props = {\n    tips: Tip[];\n    onSelect: (tip: Tip) => void;\n    onDelete: (entityId: string) => void;\n}\n\nexport default function TipList({ tips, onSelect, onDelete }: Props) {\n    return (\n        <div className=\"overflow-x-auto relative mt-6\">\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                    <tr>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Description\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Category\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Actions\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tips.map(tip => <TipItem tip={tip} key={tip.entityId} onSelect={onSelect} onDelete={onDelete} />)}\n                </tbody>\n            </table>\n        </div>\n    );\n}", "import { Form } from \"@remix-run/react\";\nimport { Category } from \"~/db/category.server\";\nimport { Modal } from \"./modal\";\n\ntype Props = {\n    isSubmiting: boolean;\n    categories: Category[];\n    onClose: Function;\n}\n\nexport default function TipModalCreate({ isSubmiting, categories, onClose }: Props) {\n    return (\n        <Modal onClose={onClose}>\n            <Form method=\"post\" className=\"md:w-96\">\n                <div>\n                    <label htmlFor=\"categoryId\" className=\"block mb-2 text-sm font-medium text-gray-900\">Category</label>\n                    <select defaultValue={\"\"} id=\"categoryId\" name=\"categoryId\" className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" required>\n                        <option value=\"\">Choose a category</option>\n                        {categories.map(({ entityId, name }) => (<option key={entityId} value={entityId}>{name}</option>))}\n                    </select>\n                </div>\n                <div className=\"mt-3\">\n                    <label htmlFor=\"description\" className=\"block mb-2 text-sm font-medium text-gray-900\">Name</label>\n                    <textarea id=\"description\" rows={5} name=\"description\" maxLength={245} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-full p-2.5\" required />\n                </div>\n                <div className=\"flex justify-end gap-2 mt-5\">\n                    <button type=\"button\" disabled={isSubmiting} onClick={() => onClose()} className=\"text-gray-900 border-2 border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center mr-2 mb-2 hover:opacity-80 disabled:opacity-50\">Cancel</button>\n                    <button type=\"submit\" disabled={isSubmiting} name=\"intent\" value=\"create\" className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">\n                        Save {isSubmiting ? \"...\" : \"\"}\n                    </button>\n                </div>\n            </Form>\n        </Modal>\n    );\n}", "import { Form } from \"@remix-run/react\";\nimport { Category } from \"~/db/category.server\";\nimport { Tip } from \"~/db/tip.server\";\nimport { Modal } from \"./modal\";\n\ntype Props = {\n    tip: Tip;\n    isSubmiting: boolean;\n    categories: Category[];\n    onClose: Function;\n}\n\nexport function TipModalEdit({ tip, isSubmiting, categories, onClose }: Props) {\n    const { categoryId, description } = tip;\n    \n    return (\n        <Modal onClose={onClose}>\n                <Form method=\"post\" className=\"md:w-96\">\n                    <div>\n                        <label htmlFor=\"categoryId\" className=\"block mb-2 text-sm font-medium text-gray-900\">Category</label>\n                        <select defaultValue={categoryId} id=\"categoryId\" name=\"categoryId\" className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" required>\n                            <option value=\"\">Choose a category</option>\n                            {categories.map(({ entityId, name }) => (<option key={entityId} value={entityId}>{name}</option>))}\n                        </select>\n                    </div>\n                    <div className=\"mt-3\">\n                        <label htmlFor=\"description\" className=\"block mb-2 text-sm font-medium text-gray-900\">Name</label>\n                        <textarea id=\"description\" rows={5} name=\"description\" maxLength={245} defaultValue={description} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-full p-2.5\" required />\n                    </div>\n                    <div className=\"flex justify-end gap-2 mt-5\">\n                        <button type=\"button\" disabled={isSubmiting} onClick={() => onClose()} className=\"text-gray-900 border-2 border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center mr-2 mb-2 hover:opacity-80 disabled:opacity-50\">Cancel</button>\n                        <button type=\"submit\" disabled={isSubmiting} name=\"intent\" value=\"create\" className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">\n                            Save {isSubmiting ? \"...\" : \"\"}\n                        </button>\n                    </div>\n                </Form>\n        </Modal>\n    );\n}", "import { Entity, Repository, Schema } from \"redis-om\";\nimport { getRamdomItemFromArray } from \"~/utils/ramdom\";\nimport { Category, getCategoryByUserAndSlug } from \"./category.server\";\nimport { redisClient, redisConnect } from \"./redis.server\";\n\nexport interface Tip {\n    description: string;\n    categoryId: string;\n    userId: string;\n    createAt: Date;\n    category?: Category\n}\n\nexport class Tip extends Entity {}\n\nexport type TipCreate = Pick<Tip, \"userId\" | \"description\" | \"categoryId\">\n\nexport type TipUpdate = Pick<Tip, \"entityId\" | \"description\" | \"categoryId\">\n\nexport type TipFilterCategory = Pick<Tip, \"userId\" |  \"categoryId\">\n\nexport type TipSearch = {\n    userId: string;\n    offset?: number;\n    perPage?: number;\n}\n\nconst tipSchema = new Schema(Tip, {\n    description: { type: \"string\" },\n    categoryId: { type: \"string\", indexed: true },\n    userId: { type: \"string\", indexed: true },\n    createAt: { type: \"date\", sortable: true }\n});\n\nasync function getTipRepository(): Promise<Repository<Tip>> {\n    await redisConnect();\n    const repository = redisClient.fetchRepository(tipSchema);\n  \n    await repository.createIndex();\n    return repository;\n}\n\nexport async function getAllTipsByUser(userId: string): Promise<Tip[]> {\n    const repository = await getTipRepository();\n\n    return repository.search()\n            .where(\"userId\")\n            .equals(userId)\n            .all();\n}\n\nexport async function getAllTipsByUserAndCategory({ userId, categoryId }: TipFilterCategory): Promise<Tip[]> {\n    const repository = await getTipRepository();\n\n    return repository.search()\n            .where(\"userId\")\n            .equals(userId)\n            .where(\"categoryId\")\n            .equals(categoryId)\n            .all();\n}\n\nexport async function getAllTipsByUserPaging({ userId, offset = 0, perPage = 1}: TipSearch): Promise<Tip[]> {\n    const repository = await getTipRepository();\n\n    return repository.search()\n            .where(\"userId\")\n            .equals(userId)\n            .sortDescending(\"createAt\")\n            .return\n            .page(offset, perPage);\n}\n\nexport async function countAllTipsByUser(userId: string): Promise<number> {\n    const repository = await getTipRepository();\n\n    return repository.search()\n        .where(\"userId\")\n        .equals(userId)\n        .return\n        .count();\n}\n\nexport function getTipsWithCategory({ tips, categories }: { tips: Tip[], categories: Category[] }) {\n    return tips.map(({ entityId, categoryId, description }) => ({\n        entityId,\n        description,\n        categoryId,\n        category: categories.find(category => categoryId === category.entityId)\n    }));\n}\n\nexport async function getTipById(entityId: string): Promise<Tip> {\n    const repository = await getTipRepository();\n    return repository.fetch(entityId);\n}\n\nexport async function createTip({ userId, description, categoryId } : TipCreate) : Promise<Tip> {\n    const repository = await getTipRepository();\n    return repository.createAndSave({ userId, description, categoryId, createAt: new Date() });\n}\n\nexport async function updateTip({ entityId, description, categoryId }: TipUpdate): Promise<Tip> {\n    const repository = await getTipRepository();\n    const tip = await getTipById(entityId);\n    \n    if(!tip) {\n        throw new Error(\"Tip not found\");\n    }\n\n    tip.description = description;\n    tip.categoryId = categoryId;\n\n    await repository.save(tip);\n    return tip;\n}\n\nexport async function deleteTip(entityId: string): Promise<void> {\n    const repository = await getTipRepository();\n    await repository.remove(entityId);\n}\n\nexport async function getRamdomTip({ userId, categorySlug }: { userId: string, categorySlug: string | null }): Promise<Tip | null> {\n    if(categorySlug) {\n        const category = await getCategoryByUserAndSlug({ userId, slug: categorySlug });\n        \n        if(category) {\n            const tips = await getAllTipsByUserAndCategory({ userId, categoryId: category.entityId });\n            const tip = getRamdomItemFromArray(tips);\n        }\n    }\n\n    const tips = await getAllTipsByUser(userId);\n    return getRamdomItemFromArray(tips);\n}", "export function getRamdomItemFromArray<T>(itemLists: Array<T>): T | null {\n    return itemLists[Math.floor(Math.random() * itemLists.length)] ?? null;\n}", "import { SignIn } from \"@clerk/remix\";\n\nexport default function SignInRoute() {\n  return (\n    <main className=\"auth flex justify-center p-2 md:p-8\">\n      <SignIn routing={\"path\"} path={\"/sign-in\"} />\n    </main>\n  );\n}\n\n", "import { SignUp } from \"@clerk/remix\";\n\nexport default function SignUpRoute() {\n  return (\n    <main className=\"auth flex justify-center p-2 md:p-8\">\n      <SignUp routing={\"path\"} path={\"/sign-up\"} />\n    </main>\n  );\n}", "import { json, LoaderArgs, TypedResponse } from \"@remix-run/node\";\nimport { cors } from \"remix-utils\";\nimport { getUserIdByApiKey } from \"~/db/apikey.server\";\nimport { createStat } from \"~/db/stats.server\";\nimport { getRamdomTip } from \"~/db/tip.server\";\nimport { getQueryStringParameter } from \"~/utils/params.server\";\n\n\nexport async function loader({ request }: LoaderArgs) {\n    const apiKey = getQueryStringParameter(request, \"api_key\");\n    \n    if(!apiKey) {\n        return cors(request, json({ status: \"forbidden\", error: \"Forbiden Access\" }, { status: 403 }));\n    }\n    \n    const userId = await getUserIdByApiKey(apiKey);\n\n    if(!userId) {\n        return cors(request, json({ status: \"forbidden\", error: \"Forbiden Access\", apiKey }, { status: 403 }));\n    }\n    await createStat(userId);\n    const categorySlug = getQueryStringParameter(request, \"category_slug\");\n    const tip = await getRamdomTip({ userId, categorySlug });\n    \n    return cors(request, json({ status: \"ok\", tip: tip?.description ?? null }));\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function AboutRoute() {\n    return (\n        <>\n            <nav className=\"bg-white h-16 fixed top-0 left-0 right-0 flex justify-between items-center border-b border-slate-200 border-solid z-10\">\n                <div className=\"flex items-center gap-2 ml-4\">\n                    <Link to=\"/\">\n                        <img src=\"/images/forest.png\" alt=\"logo\" className=\"w-10 h-10\" />\n                    </Link>\n                    \n                    <Link to=\"/\">\n                        <span className=\"font-bold\">TipLand</span>\n                    </Link>\n                </div>\n                <div className=\"mr-4 flex gap-6 text-sm items-center\">\n                    <Link to=\"sign-in\" className=\"text-slate-600\">Sign In</Link>\n                    <Link className=\"bg-black text-white rounded px-4 py-2 border border-solid border-black hover:bg-white hover:text-black\" to=\"sign-up\">Sign Up</Link>\n                </div>\n            </nav>\n\n            <div className=\"container m-0 mx-auto font-light mt-24\">\n                <div className=\"px-8\">\n                    <h1 className=\"mt-12 text-3xl mb-8 font-extrabold\">About</h1>\n\n                    <p>-</p>\n                    \n                    <h2 className=\"mt-4 text-2xl mb-2 font-bold\">Made for</h2>\n                    This project is made specifically for the <a target=\"_blank\" href=\"https://dev.to/devteam/announcing-the-redis-hackathon-on-dev-3248\" className=\"underline\">Dev.to Redis Hackathon</a>\n\n                    <p className=\"mt-4 font-bold\">Link article</p>\n                    <a className=\"underline\" href=\"-\" target=\"_blank\"></a>\n\n                    <h2 className=\"mt-4 text-2xl mb-2 font-bold\">Tech Stack</h2>\n                    <ol className=\"list-decimal ml-4\">\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://redis.io/\">Redis </a>\u2014 The main database</li>\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://redis.com/try-free/\">Redis Cloud </a>\u2014 The platform for Redis</li>\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://github.com/redis/redis-om-node\">Redis OM for Node </a>\u2014 The object mapping for Redis</li>\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://remix.run/\">Remix </a>\u2014 The web framewok</li>\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://vercel.com/\">Vercel </a>\u2014 For deploy</li>\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://clerk.dev/\">Clerk </a>- For the Auth</li>\n                        <li> <a className=\"underline\" target=\"_blank\" href=\"https://tailwindcss.com/\">Tailwind </a>\u2014 The css framework</li>\n                    </ol>\n                </div>\n            </div>\n        </>\n    );\n}", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const { userId } = await getAuth(request);\n\n  if(userId) {\n    return redirect(\"/dashboard\");\n  }\n  \n  return null;\n}\n\nexport default function IndexRoute() {\n  \n  return (\n    <>\n      <nav className=\"bg-white h-16 fixed top-0 left-0 right-0 flex justify-between items-center border-b border-slate-200 border-solid z-10\">\n            <div className=\"flex items-center gap-2 ml-4\">\n                <Link to=\"/\">\n                    <img src=\"/images/forest.png\" alt=\"logo\" className=\"w-10 h-10\" />\n                </Link>\n                \n                <Link to=\"/\">\n                    <span className=\"font-bold\">TipLand</span>\n                </Link>\n            </div>\n            <div className=\"mr-4 flex gap-6 text-sm items-center\">\n                <Link to=\"sign-in\" className=\"text-slate-600\">Sign In</Link>\n                <Link className=\"bg-black text-white rounded px-4 py-2 border border-solid border-black hover:bg-white hover:text-black\" to=\"sign-up\">Sign Up</Link>\n            </div>\n        </nav>\n        <div className=\"container m-0 mx-auto p-8 md:p-8\">\n          <div className=\"mt-14 md:mt-24\">\n            <h1 className=\"text-6xl text-zinc-900 font-extrabold md:text-8xl\"><span className=\"text-transparent bg-clip-text bg-gradient-to-r from-sky-600 to-teal-500\">Tip Land</span> the SaaS platform for the Tip of the day</h1>\n            <p className=\"mt-8 text-2xl text-gray-700 font-extralight md:text-3xl md:w-9/12 md:mt-12\">The easy integration platform to offer users the advice that will help them to better use your product.</p>\n            <section className=\"mt-12\">\n              <div className=\"mt-8 flex gap-4\">\n                <Link to=\"/sign-up\" className=\"text-white bg-gradient-to-r from-black to-neutral-900 hover:bg-gradient-to-l focus:ring-4 focus:outline-none focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-xl px-5 py-2.5 text-center mr-2 mb-2 md:px-12 md:py-5\">Get starter</Link>\n                <Link to=\"/about\" className=\"text-black hover:text-zinc-800 border border-black hover:bg-zinc-50 focus:ring-4 focus:outline-none focus:ring-zinc-700 font-medium rounded-lg text-xl px-5 py-2.5 text-center mr-2 mb-2 md:px-12 md:py-5\">About</Link>\n              </div>\n            </section>\n\n            <section className=\"mt-12 md:mt-24\">\n              <h3 className=\"font-extrabold text-3xl mb-12 md:text-5xl\">Start creating tips</h3>\n              <div className=\"md:flex md:gap-8\">\n                <figure className=\"flex-1\">\n                  <img src=\"/images/tips.png\" alt=\"tips\" className=\"max-w-full h-auto\" />\n                </figure>\n                <div className=\"flex-1\">\n                  <h5 className=\"font-bold text-2xl\">Categories</h5>\n                  <p className=\"mt-2 font-light text-gray-800\">The tips of the day are segmented by categories which can be used by product, type of customers or applications</p>\n\n                  <h5 className=\"font-bold text-2xl mt-6\">Ramdom</h5>\n                  <p className=\"mt-2 font-light text-gray-800\">Each tip requested via rest api is by default random</p>\n\n                  <h5 className=\"font-bold text-2xl mt-6\">Social</h5>\n                  <p className=\"mt-2 font-light text-gray-800\">Sign in easily via Google, Github or email</p>\n                </div>\n              </div>\n            </section>\n\n            <section className=\"mt-12 md:mt-24\">\n              <h3 className=\"font-extrabold text-3xl mb-12 md:text-5xl\">Developer Focused</h3>\n              <div className=\"md:flex md:gap-8\">\n                <div className=\"flex-1\">\n                  <h5 className=\"font-bold text-2xl\">API Key</h5>\n                  <p className=\"mt-2 font-light text-gray-800\">Get your API key to query through the API Rest randomly a tip or filter it by category</p>\n\n                  <h5 className=\"font-bold text-2xl mt-6\">Statistics</h5>\n                  <p className=\"mt-2 font-light text-gray-800\">Check the total number of requests in the last days</p>\n\n                  <h6 className=\"font-bold text-2xl mt-6\">Privacy</h6>\n                  <p className=\"mt-2 font-light text-gray-800\">You can change the assigned API Key in the developer section</p>\n                </div>\n                <figure className=\"flex-1\">\n                  <img src=\"/images/developer.png\" alt=\"developer\" className=\"max-w-full h-auto\" />\n                </figure>\n              </div>\n            </section>\n          </div>\n        </div>\n        <footer className=\"mt-8 text-sm p-8 md:p-8 font-light md:flex md:justify-between\">\n          <div>\n            {'\\u00a9'} Made for <a href=\"https://dev.to/devteam/announcing-the-redis-hackathon-on-dev-3248\" target=\"_blank\" className=\"font-bold underline\">Redis Hackathon </a>\n          </div>\n          <div className=\"flex gap-3 justify-center\">\n            <a href=\"https://dev.to/\" target=\"_blank\" className=\"hover:opacity-80\">\n                <img src=\"/images/devto.png\" alt=\"twitter\" width=\"32\" />\n            </a>\n            <a href=\"https://redis.io/\" target=\"_blank\" className=\"hover:opacity-80\">\n                <img src=\"/images/redis.png\" alt=\"twitter\" width=\"26\" />\n            </a>\n            <a href=\"https://github.com/andreslopezrm/tip-land\" target=\"_blank\" className=\"hover:opacity-80\">\n                <img src=\"/images/github.png\" alt=\"github\" width=\"24\" />\n            </a>\n          </div>\n        </footer>\n    </>\n  );\n}\n\n/*\n    <div>\n     <h1>Datos</h1>\n\n      <Link to=\"/sign-in\">Sign In</Link>\n      <Link to=\"/sign-up\">Sign Up</Link> \n*/\n", "export default {'version':'1ab3176f','entry':{'module':'/build/entry.client-IZWJTQY7.js','imports':['/build/_shared/chunk-BOJHJ2SB.js','/build/_shared/chunk-SPRLBSB7.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-DXWBRZHW.js','imports':['/build/_shared/chunk-TNUSZ5ZZ.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-UB5R2NVI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/tips':{'id':'routes/api/tips','parentId':'root','path':'api/tips','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/tips-WNGDHI5F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-XICUXJ4O.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/categories':{'id':'routes/dashboard/categories','parentId':'routes/dashboard','path':'categories','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/categories-I47E7HAJ.js','imports':['/build/_shared/chunk-NUPH6IQX.js','/build/_shared/chunk-BQD37SUP.js','/build/_shared/chunk-TNUSZ5ZZ.js','/build/_shared/chunk-LOWEPNLN.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/developer':{'id':'routes/dashboard/developer','parentId':'routes/dashboard','path':'developer','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/developer-OXIVMOQ2.js','imports':['/build/_shared/chunk-BQD37SUP.js','/build/_shared/chunk-TNUSZ5ZZ.js','/build/_shared/chunk-LOWEPNLN.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-2TMKXMKH.js','imports':['/build/_shared/chunk-LOWEPNLN.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/perfil':{'id':'routes/dashboard/perfil','parentId':'routes/dashboard','path':'perfil','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/perfil-Y5MIICPF.js','imports':['/build/_shared/chunk-LOWEPNLN.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/stats':{'id':'routes/dashboard/stats','parentId':'routes/dashboard','path':'stats','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/stats-BUXQ5OG4.js','imports':['/build/_shared/chunk-TNUSZ5ZZ.js','/build/_shared/chunk-LOWEPNLN.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/tips':{'id':'routes/dashboard/tips','parentId':'routes/dashboard','path':'tips','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/tips-BZO5PSYM.js','imports':['/build/_shared/chunk-NUPH6IQX.js','/build/_shared/chunk-BQD37SUP.js','/build/_shared/chunk-TNUSZ5ZZ.js','/build/_shared/chunk-LOWEPNLN.js','/build/_shared/chunk-AM76S2GN.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-DDVHSZDA.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-HQU7QUII.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-LEI64YOW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-1AB3176F.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/dashboard.tsx\";\nimport * as route2 from \"./routes/dashboard/categories.tsx\";\nimport * as route3 from \"./routes/dashboard/developer.tsx\";\nimport * as route4 from \"./routes/dashboard/perfil.tsx\";\nimport * as route5 from \"./routes/dashboard/index.tsx\";\nimport * as route6 from \"./routes/dashboard/stats.tsx\";\nimport * as route7 from \"./routes/dashboard/tips.tsx\";\nimport * as route8 from \"./routes/sign-in/$.tsx\";\nimport * as route9 from \"./routes/sign-up/$.tsx\";\nimport * as route10 from \"./routes/api/tips.ts\";\nimport * as route11 from \"./routes/about.tsx\";\nimport * as route12 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard/categories\": {\n      id: \"routes/dashboard/categories\",\n      parentId: \"routes/dashboard\",\n      path: \"categories\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard/developer\": {\n      id: \"routes/dashboard/developer\",\n      parentId: \"routes/dashboard\",\n      path: \"developer\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dashboard/perfil\": {\n      id: \"routes/dashboard/perfil\",\n      parentId: \"routes/dashboard\",\n      path: \"perfil\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/dashboard/stats\": {\n      id: \"routes/dashboard/stats\",\n      parentId: \"routes/dashboard\",\n      path: \"stats\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/dashboard/tips\": {\n      id: \"routes/dashboard/tips\",\n      parentId: \"routes/dashboard\",\n      path: \"tips\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/api/tips\": {\n      id: \"routes/api/tips\",\n      parentId: \"root\",\n      path: \"api/tips\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };"],
  "mappings": "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",
  "names": []
}
