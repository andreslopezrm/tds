{
  "version": 3,
  "sources": ["empty-module:~/db/tip.server", "browser-route-module:routes/dashboard/tips.tsx?browser", "../../../../app/routes/dashboard/tips.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default } from \"./routes/dashboard/tips.tsx\";", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Link, useActionData, useLoaderData, useTransition } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport DashHeader from \"~/components/dash-header\";\nimport { getallCategoriesByUser } from \"~/db/category.server\";\nimport { countAllTipsByUser, getAllTipsByUser, getTipsWithCategory } from \"~/db/tip.server\";\nimport { getQueryIntParameter } from \"~/utils/params.server\";\n\ntype IntentType = \"create\" | \"edit\" | \"delete\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n    const offset = getQueryIntParameter(request, \"offset\", 0);\n    const perPage = getQueryIntParameter(request, \"per_page\", 200); \n\n    const [total, plainTips, categories] = await Promise.all([ \n        countAllTipsByUser(userId), \n        getAllTipsByUser({ userId, offset, perPage }), \n        getallCategoriesByUser(userId) \n    ]);\n\n    const tips = getTipsWithCategory({ tips: plainTips, categories });\n    return json({ total, tips, categories, offset, perPage });\n}\n\nexport default function DashboardTipsRoute(){\n\n    const { total, tips, categories, offset, perPage } = useLoaderData();\n    const data = useActionData();\n    const { state } = useTransition();\n    const isSubmiting = state === \"submitting\";\n\n    const [showCreateModal, setShowCreateModal] = useState<boolean>(false);\n\n    console.log({ total, tips, categories, offset, perPage });\n    \n    \n    return (\n        <div>\n            <DashHeader title=\"Tips\" />\n            <div className=\"mt-4\">\n                <button type=\"button\" onClick={() => setShowCreateModal(true)} className=\"text-sm font-bold underline\"> + New tip </button>\n            </div>\n        </div>\n    )\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAAA,iBAAwB;AAExB;AACA,oBAAyB;AAEzB,sBAAuC;AACvC,iBAA0E;AAC1E,oBAAqC;AAuBtB,8BAA6B;AAExC,QAAM,EAAE,OAAO,MAAM,YAAY,QAAQ,YAAY;AACrD,QAAM,OAAO;AACb,QAAM,EAAE,UAAU;AAClB,QAAM,cAAc,UAAU;AAE9B,QAAM,CAAC,iBAAiB,sBAAsB,4BAAkB;AAEhE,UAAQ,IAAI,EAAE,OAAO,MAAM,YAAY,QAAQ;AAG/C,SACI,oCAAC,OAAD,MACI,oCAAC,YAAD;AAAA,IAAY,OAAM;AAAA,MAClB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,SAAS,MAAM,mBAAmB;AAAA,IAAO,WAAU;AAAA,KAA8B;AAAA;",
  "names": []
}
