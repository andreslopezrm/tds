{
  "version": 3,
  "sources": ["empty-module:~/db/category.server", "browser-route-module:routes/dashboard/categories.tsx?browser", "../../../../app/routes/dashboard/categories.tsx", "../../../../app/components/category-list.tsx", "../../../../app/components/category-item.tsx", "../../../../app/components/modal.tsx", "../../../../app/components/toast.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default } from \"./routes/dashboard/categories.tsx\";", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport CategoryList from \"~/components/category-list\";\nimport DashHeader from \"~/components/dash-header\";\nimport { Modal } from \"~/components/modal\";\nimport Toast from \"~/components/toast\";\nimport { createCategory, getAllCategoriesByUser } from \"~/db/category.server\";\n\ntype IntentType = \"create\" | \"edit\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    const categories = await getAllCategoriesByUser({ userId, perPage: 200 });\n    return json({ categories, date: +new Date() });\n}\n\nexport async function action({ request }: ActionArgs) {\n    const { userId } = await getAuth(request);\n\n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    const formData = await request.formData();\n    const intent = formData.get(\"intent\") as IntentType; \n    \n    if(intent === \"create\") {\n        const name = formData.get(\"name\") as string | null;\n        if(!name){\n            return json({ intent, errors: { name: \"Name required \"}})\n        }\n        const category = await createCategory({ userId, name });\n        return json({ intent, category });\n    }\n    \n    return json({ intent });\n}\n\nexport default function DashboardCategoryRoute() {\n\n    const { categories } = useLoaderData();\n    const data = useActionData();\n    const [showCreateModal, setShowCreateModal] = useState(false);\n\n    const handleOpenShowCreateModal = () => setShowCreateModal(true);\n\n    const handleCloseShowCreateModal = () => setShowCreateModal(false);\n    \n    useEffect(() => {\n        if(data?.intent === \"create\" && data?.category) {\n            \n            handleCloseShowCreateModal();\n        }\n    }, [data]);\n\n    return (\n        <div>\n            <DashHeader title=\"Categories\" />\n            <div className=\"mt-4\">\n                <button type=\"button\" onClick={handleOpenShowCreateModal}>New Category</button>\n            </div>\n            <CategoryList categories={categories} />\n            {\n                showCreateModal ? (\n                    <Modal onClose={handleCloseShowCreateModal}>\n                        <Form method=\"post\" className=\"md:w-96\">\n                            <div>\n                                <label htmlFor=\"name\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Name</label>\n                                <input type=\"text\" id=\"name\" name=\"name\" className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-full p-2.5\" required />\n                            </div>\n                            <div className=\"flex justify-end gap-2 mt-5\">\n                                <button type=\"button\" onClick={handleCloseShowCreateModal} className=\"text-gray-900 border-2 border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center mr-2 mb-2 hover:opacity-80 disabled:opacity-50\">Cancel</button>\n                                <button type=\"submit\" name=\"intent\" value=\"create\" className=\"text-white border-2 border-gray-800 bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 disabled:opacity-50\">Acept</button>\n                            </div>\n                        </Form>\n                    </Modal>\n                ) : null\n            }\n            <Toast />\n        </div>\n    );\n}", "import { Category } from \"~/db/category.server\"\nimport CategoryItem from \"./category-item\";\n\ntype Props = {\n    categories: Category[]\n}\n\nexport default function CategoryList({ categories }: Props) {\n   return (\n        <div className=\"overflow-x-auto relative mt-6\">\n            <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                    <tr>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Name\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Slug\n                        </th>\n                        <th scope=\"col\" className=\"py-3 px-6\">\n                            Actions\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {categories.map(category => <CategoryItem category={category} key={category.entityId} />)}\n                </tbody>\n            </table>\n        </div>\n   );\n}", "import { Category } from \"~/db/category.server\"\n\ntype Props = {\n    category: Category\n}\n\nexport default function CategoryItem({ category }: Props) {\n    const { name, slug } = category;\n    return (\n        <tr className=\"bg-white border-b\">\n            <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                { name }\n            </th>\n            <td className=\"py-4 px-6\">\n                { slug }\n            </td>\n            <td className=\"py-4 px-6\">\n                -\n            </td>\n        </tr>\n    );\n}", "type Props = {\n    children?: JSX.Element;\n    onClose: Function;\n}\n\nexport function Modal({ children, onClose }: Props) {\n    return (\n        <div id=\"modal\" aria-hidden=\"true\" className=\" bg-white bg-opacity-80 flex justify-center items-center overflow-y-auto overflow-x-hidden fixed top-0 right-0 bottom-0 left-0 z-10 w-full md:inset-0 h-modal md:h-full\">\n            <div className=\"max-w-2xl m-8 relative inline-flex items-center justify-center p-1 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-black\">\n                <div className=\"relative p-8 transition-all ease-in duration-75 bg-white rounded-md\">\n                    <div className=\"mb-4 flex justify-between\">\n                        <h3 className=\"font-bold text-xl\">Tip Land</h3>\n                        <button type=\"button\" onClick={() => onClose()}>\n                            <img src=\"/images/close.png\" width=\"20\" />\n                        </button>\n                    </div>\n                    <div>\n                        { children }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}", "export default function Toast() {\n    return (\n        <div id=\"toast-success\" className=\"flex items-center p-4 mb-4 w-full max-w-xs rounded-lg shadow text-gray-400 bg-gray-900\" role=\"alert\">\n            <div className=\"inline-flex flex-shrink-0 justify-center items-center w-8 h-8 rounded-lg bg-green-800 text-green-200\">\n                <svg aria-hidden=\"true\" className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path></svg>\n                <span className=\"sr-only\">Check icon</span>\n            </div>\n            <div className=\"ml-3 text-sm font-normal\">Item moved successfully.</div>\n            <button type=\"button\" className=\"ml-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 inline-flex h-8 w-8 text-gray-500 hover:text-white bg-gray-800 hover:bg-gray-700\" data-dismiss-target=\"#toast-success\" aria-label=\"Close\">\n                <span className=\"sr-only\">Close</span>\n                <svg aria-hidden=\"true\" className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\n            </button>\n        </div>\n    );\n}"],
  "mappings": "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",
  "names": []
}
