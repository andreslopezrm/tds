{
  "version": 3,
  "sources": ["empty-module:~/db/apikey.server", "browser-route-module:routes/dashboard/developer.tsx?browser", "../../../../app/routes/dashboard/developer.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default } from \"./routes/dashboard/developer.tsx\";", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport DashHeader from \"~/components/dash-header\";\nimport { ApiKey, getApiKeyByUser } from \"~/db/apikey.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n    const apiKey = await getApiKeyByUser(userId) as ApiKey;\n    return json({ apiKey });\n}\n\nexport default function DashboardDeveloperRoute() {\n    \n    const { apiKey } = useLoaderData();\n    const [baseUrl, setBaseUrl] = useState(\"\");\n    const [showApiKey, setShowApiKey] = useState(false);\n    const [enpointUrl, setEndpointUrl] = useState(\"\");\n\n    useEffect(() => {\n        setBaseUrl(window.location.origin);\n    }, []);\n\n    return (\n        <div>\n            <DashHeader title=\"Developer\" />\n            <p className=\"mt-4 font-light\">To use the api rest of the tip of the day, send the value of your Api Key as a query parameter in the request</p>\n            <p className=\"mt-4 font-light\">Usage example</p>\n            <div className=\"bg-gray-100 p-4\">\n                <a className=\"font-mono\"></a>\n            </div>\n        </div>\n    );\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAAA,iBAAwB;AAExB;AACA,oBAAoC;AAEpC,oBAAwC;AAYzB,mCAAmC;AAE9C,QAAM,EAAE,WAAW;AACnB,QAAM,CAAC,SAAS,cAAc,4BAAS;AACvC,QAAM,CAAC,YAAY,iBAAiB,4BAAS;AAC7C,QAAM,CAAC,YAAY,kBAAkB,4BAAS;AAE9C,+BAAU,MAAM;AACZ,eAAW,OAAO,SAAS;AAAA,KAC5B;AAEH,SACI,oCAAC,OAAD,MACI,oCAAC,YAAD;AAAA,IAAY,OAAM;AAAA,MAClB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAkB,kHAC/B,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAkB,kBAC/B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA;AAAA;",
  "names": []
}
