{
  "version": 3,
  "sources": ["empty-module:~/db/user.server", "browser-route-module:routes/dashboard.tsx?browser", "../../../app/routes/dashboard.tsx", "../../../app/components/dash-navbar.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default } from \"./routes/dashboard.tsx\";", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport DashNavbar from \"~/components/dash-navbar\";\nimport { checkUser } from \"~/db/user.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const { userId } = await getAuth(request);\n    \n    if(!userId) {\n        return redirect(\"/sign-up\");\n    }\n\n    await checkUser(userId);\n    \n    return json({ userId });\n}\n\nexport default function DashboardRoute() {\n    return (\n        <main>\n            <div className=\"flex gap-8 min-h-screen\">\n                <DashNavbar />\n                <section className=\"flex-1\">\n                    <Outlet />\n                </section>\n            </div>\n        </main>\n    );\n}", "import { Link, useLocation } from \"@remix-run/react\";\n\nconst menuItems = [\n    {\n        id: \"tip\",\n        title: \"Tips\",\n        path: \"tips\"\n    },\n    {\n        id: \"cat\",\n        title: \"Categories\",\n        path: \"categories\"\n    },\n    {\n        id: \"stats\",\n        title: \"Stats\",\n        path: \"stats\"\n    },\n    {\n        id: \"dev\",\n        title: \"Developer\",\n        path: \"developer\",\n    },\n    {\n        id: \"perfil\",\n        title: \"Perfil\",\n        path: \"perfil\"\n    }\n];\n\nexport default function DashNavbar() {\n\n    const { pathname } = useLocation();\n    console.log(pathname)\n\n    return (\n        <nav className=\"bg-gray-100 p-3 shadow md:w-56 md:px-6 md:py-3\">\n            <div className=\"flex items-center md:gap-2\">\n                <img src=\"/images/forest.png\" alt=\"logo\" width=\"30\" />\n                <h1 className=\"hidden uppercase font-extrabold md:block\">Tip Land</h1>\n            </div>\n            <hr className=\"mt-3\" />\n            <div className=\"hidden mt-3 font-bold px-2 md:block\">Menu</div>\n            <ul className=\"mt-4\">\n                {menuItems.map(({ id, title, path }) => {\n                    const isSelected = pathname == `/dashboard/${path}`;\n                    const imageType = isSelected ? \"fill\" : \"out\";\n                    return (\n                        <li key={id} className=\"mt-2 px-2 py-1 rounded hover:bg-gray-200\">\n                            <Link to={path} className=\"flex items-center md:gap-2\">\n                                <img src={`/images/${id}-${imageType}.png`} alt={title} className=\"w-6 h-6 md:w-4 md:h-4\" />\n                                <span className=\"hidden md:block font-light\">{title}</span>\n                            </Link>\n                        </li>\n                    );\n                })}\n                <li>\n                   <button type=\"button\">\n                        \n                   </button>\n                </li>\n            </ul>\n        </nav>\n    );\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAAA,iBAAwB;AAExB;;;ACFA;AAAA;AAEA,IAAM,YAAY;AAAA,EACd;AAAA,IACI,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA;AAAA,EAEV;AAAA,IACI,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA;AAAA,EAEV;AAAA,IACI,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA;AAAA,EAEV;AAAA,IACI,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA;AAAA,EAEV;AAAA,IACI,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA;AAAA;AAIC,sBAAsB;AAEjC,QAAM,EAAE,aAAa;AACrB,UAAQ,IAAI;AAEZ,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAqB,KAAI;AAAA,IAAO,OAAM;AAAA,MAC/C,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA2C,cAE7D,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,MACd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAsC,SACrD,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,UAAU,IAAI,CAAC,EAAE,IAAI,OAAO,WAAW;AACpC,UAAM,aAAa,YAAY,cAAc;AAC7C,UAAM,YAAY,aAAa,SAAS;AACxC,WACI,oCAAC,MAAD;AAAA,MAAI,KAAK;AAAA,MAAI,WAAU;AAAA,OACnB,oCAAC,MAAD;AAAA,MAAM,IAAI;AAAA,MAAM,WAAU;AAAA,OACtB,oCAAC,OAAD;AAAA,MAAK,KAAK,WAAW,MAAM;AAAA,MAAiB,KAAK;AAAA,MAAO,WAAU;AAAA,QAClE,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OAA8B;AAAA,MAK9D,oCAAC,MAAD,MACG,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA;AAAA;;;ADrDhC,kBAA0B;AAcX,0BAA0B;AACrC,SACI,oCAAC,QAAD,MACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,YAAD,OACA,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,QAAD;AAAA;",
  "names": []
}
